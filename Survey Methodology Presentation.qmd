---
title: "Survey Methodology Presentation"
format: revealjs
editor: visual
---

## Introduction- Auuu

Purpose of the project?

## Data Handling- Ekin

**Data Sources**

-   *Special Eurobarometer 493* – (Public opinion data at the individual level)

-   *UNESCO Edu Country Data 2019* – (Country-level education & economic indicators)

-   *Trans Health Data*

-   *ILGA Data*

![](images/clipboard-4112000975.png)

------------------------------------------------------------------------

![](images/clipboard-1135736898.png)

![](images/clipboard-2955755552.png)

------------------------------------------------------------------------

## Descriptive Analysis

Voice Representation - Au

Identity- Au

Gender - Gender distribution for the whole survey -Au\
\
Demographics: Age- Education Distribution -Au

School Diversity- Au

Other variables- Au\
\
Highest Education Level Reached Per Country -Au

Distribution of responses to QC19 - Au

## Country- Level Data- Gina

-   Economic Summary

-   GDP vs Education expenditure

-   Health Variables - Gina to develop this graph

-   Legal Variables- Gina to develop this graph

## Multicolinearity -Ekin

Summary of Individual & Country- Final Data

-   how do individual responses compare to country level data

## Prediction Models- Gina

what models were used and why + their results

feature importance from random forest

## Model Comparison and/ or Confusion matrix

-   maybe a chart for cpomparison\

## Conclusion

```{r}
final_data <- read.csv("final_data.csv")

# Define country codes and sample values
country_codes <- data.frame(
  country = c("Belgium", "Denmark", "Greece", "Spain", "Finland", "France", "Ireland", "Italy",
              "Luxembourg", "Netherlands", "Austria", "Portugal", "Sweden", "Bulgaria", "Cyprus",
              "Czech Republic", "Estonia", "Hungary", "Latvia", "Lithuania", "Malta", "Poland",
              "Romania", "Slovenia", "Croatia", "Germany"),
  iso3c = c("BEL", "DNK", "GRC", "ESP", "FIN", "FRA", "IRL", "ITA", "LUX", "NLD", 
           "AUT", "PRT", "SWE", "BGR", "CYP", "CZE", "EST", "HUN", "LVA", "LTU", 
           "MLT", "POL", "ROU", "SVN", "HRV",) # ISO-3 Codes
)


percentage <- final_data %>%
  group_by(iso3c) |>
  count(transgender_civil_dc) %>%  
  mutate(percentage = (n / sum(n)) * 100) 

percentage <- percentage%>%
  left_join(country_codes, by = "iso3c")

# Aggregate data and handle missing values
aggregated_data <- percentage %>%
  group_by(iso3c) %>%
  summarise(
    tooltip_text = paste0(
      "<b>Yes:</b> ", ifelse(any(transgender_civil_dc == 1), 
                              round(percentage[transgender_civil_dc == 1], 1), "0"), "%<br>",
      "<b>No:</b> ", ifelse(any(transgender_civil_dc == 2), 
                             round(percentage[transgender_civil_dc == 2], 1), "0"), "%<br>",
      "<b>DK:</b> ", ifelse(any(transgender_civil_dc == 3), 
                             round(percentage[transgender_civil_dc == 3], 1), "0"), "%"
    ),
    dominant_dc = transgender_civil_dc[which.max(percentage)] # Get dominant category
  ) %>%
  ungroup()


hcmap("custom/europe", 
      data = aggregated_data,
      name = "Transgender Civil DC Levels",
      joinBy = c("iso-a3", "iso3c"),  # Ensure correct mapping
      value = "dominant_dc",  # Color based on dominant category
      dataLabels = list(enabled = TRUE, format = '{point.name}'),
      borderColor = "#ffffff") %>%
  hc_colorAxis(dataClasses = list(
    list(from = 1, to = 1, color = "#007bff", name = "Yes"),      # Blue for Yes
    list(from = 2, to = 2, color = "#ffd700", name = "No"),      # Yellow for No
    list(from = 3, to = 3, color = "#4caf50", name = "DK")       # Green for DK
  )) %>%
  hc_tooltip(
    useHTML = TRUE,
    headerFormat = "<span style='font-size:16px; font-weight:bold'>{point.name}</span><br>",
    pointFormat = "<div style='width:260px; font-size:14px; line-height:1.5'>{point.tooltip_text}</div>",
    borderWidth = 2,
    borderColor = "#333",
    backgroundColor = "rgba(255, 255, 255, 0.95)",
    style = list(fontSize = "14px", padding = "12px")
  ) %>%
  hc_chart(
    width = 550,  # Increase width for a broader view
    height = 550, 
    map= list(
      zoom = 0.3,  # Daha uzak bir görünüm sağlar
      center = list(latitude = 50, longitude = 10)  # Avrupa'nın merkezine odaklanır
    )
  ) %>%
  hc_mapNavigation(
    enabled = TRUE,  # Allow zooming manually
    enableButtons = TRUE,  # Enable zoom control buttons
    enableMouseWheelZoom = FALSE  # Disable automatic mouse zoom for better control
  ) %>%
  hc_title(text = "Transgender Civil DC Support Levels in Europe")
```
