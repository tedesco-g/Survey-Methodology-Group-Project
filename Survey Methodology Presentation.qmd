---
title: "Survey Methodology Presentation"
format: revealjs
editor: visual
---

## Technical Things

```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(haven)
library(tidyverse)
library(naniar)
library(visdat)
library(mice)
library(GGally)
library(corrplot)
library(ggcorrplot)
library(reshape2)
library(readr)
library(caret)
library(dplyr)
library(ggplot2)
library(viridis)
library(MASS)
library(lme4)
library(sjPlot)
library(tidyr)
library(patchwork)
library(car)
library(nnet)
library(highcharter)
library(scales)
library(rpart)
library(randomForest)
library(pROC)
library(xgboost)
library(gbm)
library(MLmetrics)
library(smotefamily)
library(fastDummies)

```

## Introduction- Auuu

**Purpose of the project?**

Our project explores the factors influencing public support for transgender rights across Europe, utilizing data from the Special Eurobarometer 493 survey. We found that support varies significantly, with Western Europe generally showing greater acceptance compared to Eastern Europe.

Our analysis focuses on both individual-level factors, such as demographics, religion, and ideology, and country-level variables, including GDP, legal frameworks, and policy environments. By examining these factors, we aim to understand the variations in support for transgender civil document changes.

Additionally, we assess the role of education and healthcare in shaping public attitudes, recognizing their impact on inclusivity and policy acceptance. Our goal is to develop a predictive model that can forecast support levels across different countries, integrating both structural and individual determinants.

This project highlights the importance of understanding the multifaceted nature of public attitudes towards transgender rights and provides insights for policymakers and advocates working towards greater inclusivity.

------------------------------------------------------------------------

## Data Handling- Ekin

**Data Sources**

-   *Special Eurobarometer 493* – (Public opinion data at the individual level)

-   *UNESCO Edu Country Data 2019* – (Country-level education & economic indicators)

-   *Trans Health Data*

-   *ILGA Data*

---

## First Imputation 

![](images/clipboard-4112000975.png)

------------------------------------------------------------------------

## Second Imputation

![](images/clipboard-1135736898.png)

---

![](images/clipboard-2955755552.png)

------------------------------------------------------------------------

------------------------------------------------------------------------

## Descriptive Analysis

### Individual-Level

Voice Representation - Au

Identity- Au

Gender - Gender distribution for the whole survey -Au\
\
Demographics: Age- Education Distribution -Au

School Diversity- Au

Other variables- Au\
\
Highest Education Level Reached Per Country -Au

Distribution of responses to QC19 - Au

```{r, echo=FALSE, message=FALSE, warning=FALSE}
# Load necessary library
library(ggplot2)

```

------------------------------------------------------------------------

### Country-Level - Gina

-   Economic Summary

-   GDP vs Education expenditure

-   Health Variables - Gina to develop this graph

-   Legal Variables- Gina to develop this graph

------------------------------------------------------------------------

## Multicolinearity -Ekin

```{r, echo=FALSE, message=FALSE, warning=FALSE}

final_data <- read_csv("final_data.csv")

# Convert to an ordered factor
final_data$transgender_civil_dc1 <- factor(final_data$transgender_civil_dc, 
                                          levels = c(2, 3, 1), 
                                          labels = c("Oppose", "Don't Know", "Support"),
                                          ordered = TRUE)

religion_labels <- c(
  "1" = "Catholic",
  "2" = "Orthodox Christian",
  "3" = "Protestant",
  "4" = "Other Christian",
  "5" = "Jewish",
  "6" = "Muslim - Shia",
  "7" = "Muslim - Sunni",
  "8" = "Other Muslim",
  "9" = "Sikh",
  "10" = "Buddhist",
  "11" = "Hindu",
  "12" = "Atheist",
  "13" = "Non believer / Agnostic",
  "14" = "Other",
  "15" = "Refusal",
  "16" = "Don't Know"
)

final_data <- final_data %>%
  filter(religion %in% names(religion_labels))

# Convert religion variable to factor with specific labels
final_data$religion1 <- factor(final_data$religion, 
                              levels = names(religion_labels), 
                              labels = religion_labels)


final_data$ideo1 <- scale(final_data$ideo)  

control_settings <- glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 100000))

model1<- glmer(transgender_civil_dc1 ~ gender + religion1 + ideo + 
                  (1 | iso3c), 
                data = final_data, 
                family = binomial, 
                control = control_settings)



plot_model(model1, type = "est", show.values = TRUE, title = "Effect of Variables on Support for Transgender Rights")
```

------------------------------------------------------------------------

```{r, echo=FALSE, message=FALSE, warning=FALSE}

# Model with a quadratic term for gender
final_data$gender_squared <- final_data$gender^2

model2 <- glmer(transgender_civil_dc1 ~ gender + gender_squared + religion1 + ideo1 + (1 | iso3c),
                data = final_data,
                family = binomial,
                control = glmerControl(optimizer = "bobyqa"))

# Summary of the model
summary(model2, correlation = TRUE)

# Get covariance matrix for the fixed effects coefficients
vcov(model2)
```

------------------------------------------------------------------------

```{r, echo=FALSE, message=FALSE, warning=FALSE}
model_multinomial <- multinom(transgender_civil_dc1 ~ gender + religion1 + ideo1,
                              data = final_data)

summary(model_multinomial)
```

------------------------------------------------------------------------

```{r, echo=FALSE, message=FALSE, warning=FALSE}
# Define training control for cross-validation (10-fold cross-validation)
train_control <- trainControl(method = "cv", number = 10)

# Train the model using multinomial logistic regression with cross-validation
cv_model <- train(transgender_civil_dc1 ~ gender + religion1 + ideo1,
                  data = final_data,
                  method = "multinom",  # Multinomial logistic regression
                  trControl = train_control)


# Confusion matrix for the cross-validation model
confusionMatrix(cv_model)
```

------------------------------------------------------------------------

```{r, echo=FALSE, message=FALSE, warning=FALSE}

model_eco <- lm(transgender_civil_dc ~ gdp+ edu_exp_pct +preprim_exp + prim_exp +  lose_exp +upse_exp+  ter_exp+ voc_exp,
                    data = final_data)


print(model_eco)

```

------------------------------------------------------------------------

```{r, echo=FALSE, message=FALSE, warning=FALSE}
# Correcting the select() function by adding quotes around each variable name
cor_data <- final_data %>%
  dplyr::select("gender", "religion", "ideo", "gdp", "edu_exp_pct", "preprim_exp", "prim_exp", "lose_exp", 
         "upse_exp", "ter_exp", "voc_exp", "psychological.care", "psychiatric.care", "nolger", 
         "exist_lgme", "exist_adm", "name_change", "self_det")

# Compute the correlation matrix
cor_matrix <- cor(cor_data, use = "complete.obs")

```

```{r}
corrplot(cor_matrix)

```

------------------------------------------------------------------------

## Prediction Models- Gina

what models were used and why + their results

feature importance from random forest

------------------------------------------------------------------------

## Model Comparison and/ or Confusion matrix

-   maybe a chart for cpomparison

------------------------------------------------------------------------

## Conclusion

```{r}
merged_data <- read_csv ("merged_data.csv")

# Define country codes and sample values
country_codes <- data.frame(
  country = c("Belgium", "Denmark", "Greece", "Spain", "Finland", "France", "Ireland", "Italy",
              "Luxembourg", "Netherlands", "Austria", "Portugal", "Sweden", "Bulgaria", "Cyprus",
              "Czech Republic", "Estonia", "Hungary", "Latvia", "Lithuania", "Malta", "Poland",
              "Romania", "Slovenia", "Croatia", "Germany"),
  iso3c = c("BEL", "DNK", "GRC", "ESP", "FIN", "FRA", "IRL", "ITA", "LUX", "NLD", 
           "AUT", "PRT", "SWE", "BGR", "CYP", "CZE", "EST", "HUN", "LVA", "LTU", 
           "MLT", "POL", "ROU", "SVN", "HRV", "DEU") # ISO-3 Codes
)


percentage <- final_data %>%
  group_by(iso3c) |>
  count(transgender_civil_dc) %>%  # Count occurrences of each unique value
  mutate(percentage = (n / sum(n)) * 100) 

percentage <- percentage%>%
  left_join(country_codes, by = "iso3c")

library(dplyr)
library(highcharter)

# Aggregate data and handle missing values correctly
aggregated_data <- percentage %>%
  group_by(iso3c) %>%
  summarise(
    country = country_codes$country[match(iso3c, country_codes$iso3c)],  # Add country name
    tooltip_text = paste0(
      "<b>", country, "</b><br>",
      "<b>Yes:</b> ", round(sum(percentage[transgender_civil_dc == 1], na.rm = TRUE), 1), "%<br>",
      "<b>No:</b> ", round(sum(percentage[transgender_civil_dc == 2], na.rm = TRUE), 1), "%<br>",
      "<b>DK:</b> ", round(sum(percentage[transgender_civil_dc == 3], na.rm = TRUE), 1), "%"
    ),
    dominant_dc = transgender_civil_dc[which.max(percentage)]  # Get the dominant category
  ) %>%
  ungroup()

# Generate Highcharts map
hcmap("custom/europe", 
      data = aggregated_data,
      name = "Transgender Civil DC Levels",
      joinBy = c("iso-a3", "iso3c"),  
      value = "dominant_dc",
      dataLabels = list(enabled = TRUE, format = '{point.name}'),
      borderColor = "#ffffff"
) %>%
  hc_colorAxis(dataClasses = list(
    list(from = 1, to = 1, color = "#007bff", name = "Yes"),      # Blue for Yes
    list(from = 2, to = 2, color = "#ffd700", name = "No"),      # Yellow for No
    list(from = 3, to = 3, color = "#4caf50", name = "DK")       # Green for DK
  )) %>%
  hc_tooltip(
    useHTML = TRUE,
    headerFormat = "<span style='font-size:16px; font-weight:bold'>{point.name}</span><br>",
    pointFormat = "<div style='width:260px; font-size:14px; line-height:1.5'>{point.tooltip_text}</div>",
    borderWidth = 2,
    borderColor = "#333",
    backgroundColor = "rgba(255, 255, 255, 0.95)",
    style = list(fontSize = "14px", padding = "12px")
  ) %>%
  hc_chart(
    width = 550,  
    height = 550, 
    map= list(
      zoom = 0.3,  
      center = list(latitude = 50, longitude = 10)  
    )
  ) %>%
  hc_mapNavigation(
    enabled = TRUE,  
    enableButtons = TRUE,  
    enableMouseWheelZoom = FALSE  
  ) %>%
  hc_title(text = "Transgender Civil DC Support Levels in Europe")

```
